
namespace worksche{
	import console; 
	time = null;
	interval = null;
	avgtime = 0;
	avgwgttime = 0;
	setinterval = function(num){
		interval = num;
	}
	
	getinterval = function(){
		return interval;
	}
	
	
	initialtime = function(){
		settime(0);
		avgtime = 0;
		avgwgttime = 0;
	}
	
	updatetime = function(addtime){
		time += addtime;
	}
	
	gettime = function(){
		return time;
	}
	
	settime = function(num){
		time = num;
	}
	
	
	
	sortbyarr = function(b){
		return owner.arrive > b.arrive;
	}
	
	sortbyrate = function(b){
		return owner.resrate > b.resrate; 
	}
	
	
	exec = function(mytable){
		if(gettime() < mytable[#mytable].arrive){
			console.log("do nothing!");
			settime(mytable[#mytable].arrive);
		}
		else {
			if(mytable[#mytable].lefttime <= getinterval()){
				//..console.log(mytable[#mytable].name,
				//mytable[#mytable].lefttime);
				updatetime(mytable[#mytable].lefttime);
				var name = mytable[#mytable].name;
				var arrive = mytable[#mytable].arrive;
				var lasttime = mytable[#mytable].lasttime;
				var nowtime = gettime();
				..console.log("作业"++name++"到达时间：",
					arrive);
				..console.log("作业"++name++"完成时间：",
					nowtime);
				..console.log("作业"++name++"执行时间：",
					lasttime);
				avgtime += (nowtime - arrive);
				..console.log("作业"++name++"周转时间：",
					nowtime - arrive);
				avgwgttime += (nowtime - arrive)/lasttime;
				..console.log("作业"++name++"带权周转时间：",
					(nowtime - arrive)/lasttime);
				..table.pop(mytable);
			}
			else {
				mytable[#mytable].lefttime -= getinterval();
				..console.log(mytable[#mytable].name,getinterval());
				updatetime(getinterval());
			}
		}
		
		
	}

	cycle = function(mytable){
		for(k,v in mytable){
			if(k < #mytable){
				if(gettime() >= v.arrive){
					..table.insert(mytable,..table.pop(mytable),k);
					break ;
				}
			}
		}
		
	}	
	
	machine = function(mytable,num){
		..console.log("--------时间片轮转法--------");
		..table.sort(mytable,sortbyarr);
		var length = ..table.len(mytable);
		initialleft(mytable);
		initialtime();
		setinterval(num);
		while(true){
			exec(mytable);
			if(!#mytable){
				break ;
			}
			cycle(mytable);
		}
		avgtime /= length;
		avgwgttime /= length;
		..console.log("平均周转时间：",avgtime);
		..console.log("平均带权周转时间：",avgwgttime);
	}
	
	selectwork = function(mytable){
	
		if(gettime() < mytable[#mytable].arrive){
			console.log("do nothing!");
			settime(mytable[#mytable].arrive);
		}
		else {
			//..console.log(mytable[#mytable].name,mytable[#mytable].lasttime);
			updatetime(mytable[#mytable].lasttime);
			var name = mytable[#mytable].name;
			var arrive = mytable[#mytable].arrive;
			var lasttime = mytable[#mytable].lasttime;
			var nowtime = gettime();
			..console.log("作业"++name++"到达时间：",
				arrive);
			..console.log("作业"++name++"完成时间：",
				nowtime);
			..console.log("作业"++name++"执行时间：",
				lasttime);
			avgtime += (nowtime - arrive);
			..console.log("作业"++name++"周转时间：",
				nowtime - arrive);
			avgwgttime += (nowtime - arrive)/lasttime;
			..console.log("作业"++name++"带权周转时间：",
				(nowtime - arrive)/lasttime);
			..table.pop(mytable);
		}
		
	}
	
	updatework = function(mytable){
		var temp = gettime();
		for(k,v in mytable){
			if(temp > v.arrive){
				v.resrate += (temp - v.arrive)/v.lasttime;
			}
		}
		..table.sort(mytable,sortbyrate);
	}
	
	initialstate = function(mytable){
		for(k,v in mytable){
			v.resrate= 1;
		}	
	}
	
	initialleft = function(mytable){
		for(k,v in mytable){
			v.lefttime = v.lasttime;
		}	
	}
	
	machine1 = function(mytable){
		..console.log("--------最高响应比优先法--------");
		..table.sort(mytable,sortbyarr);
		var length = ..table.len(mytable);
		initialtime();
		initialstate(mytable);
		while(true){
			selectwork(mytable);
			if(!#mytable){
				break ;
			}
			updatework(mytable);
		}
		avgtime /= length;
		avgwgttime /= length;
		..console.log("平均周转时间：",avgtime);
		..console.log("平均带权周转时间：",avgwgttime);
	}
	
		
	
	/*
aaaa = {1;2;3};
	for(k,v in aaaa){
		..console.log(k);
	
	}
	
	..console.dump(aaaa);
*/
	
	test = {
		{name = "A";arrive = 1;lasttime = 4};
		{name = "B";arrive = 6;lasttime = 7};
		{name = "C";arrive = 6;lasttime = 8};	
	};
	test1 = ..table.clone(test);
	machine(test,5);
	console.log(gettime());
	machine1(test1);
	console.log(gettime());
	..console.pause(true);
}
